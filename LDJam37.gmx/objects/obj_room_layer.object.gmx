<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_count = 0;
player_created = 0;

dir = 1;

//Seed
randomize();

rand_x = random_range((room_width/4), (room_width*(3/4)));
rand_y = random_range((room_height/4), (room_height*(3/4)));

//x = rand_x-(rand_x%16);
//y = rand_y-(rand_y%16);
x = 0;
y = 0;

x_left = x;
y_upper = y;
x_right = 0;
y_lower = 0;

room_speed = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var inst = position_meeting(x, y, obj_room);
show_debug_message("inst!");
show_debug_message(inst);
show_debug_message("room count!");
show_debug_message(room_count);
show_debug_message("x");
show_debug_message(x);
show_debug_message("y");
show_debug_message(y);
if (!inst &amp;&amp; x &gt;= 0 &amp;&amp; y &gt;= 0 &amp;&amp; (x + 160) &lt; room_width &amp;&amp; (y+80) &lt; room_height)
{
    instance_create(x, y, obj_room);
    room_count++;
    //This stores top left and bottom right corners
    if( x &lt; x_left) { x_left = x};
    if( x &gt; x_right) { x_right = x};
    if( y &lt; y_upper) { y_upper = y};
    if( y &gt; y_lower) { y_lower = y};
} else {
    rand_x = irandom_range(-1, 1);
    rand_y = irandom_range(-1, 1);
    x = x_right + (rand_x * 160);
    y = y_lower + (rand_y * 80);
}



//add player
if(room_count == 1 &amp;&amp; player_created == 0)
{
    player_created = 1;
    instance_create((x+64),(y+64), obj_player);
}



dir = choose(1, 2, 3, 4, dir);

switch(dir)
{
    case 1:
        x += 160;
        break;
        
    case 2:
        y += 80;
        break;
        
    case 3:
        x -= 160;
        break;
        
    case 4:
        y -= 80;
        break;
}

//destroy when work here is done
if(room_count == 8)
{
    //wall_p = instance_create(x_left, y_upper, obj_waller);
    //wall_p.stop_x = x_right;
    //wall_p.stop_y = y_lower;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
